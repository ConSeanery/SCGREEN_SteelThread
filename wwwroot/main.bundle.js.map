{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/post-data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"\\r\\n\\r\\n<h1>This is my data:</h1>\\r\\n\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let value of apiValues\\\">{{value}}</li>\\r\\n</ul>\\r\\n\\r\\n\\r\\n\\r\\n<h1>Data Input:</h1>\\r\\n\\r\\n\\r\\n\\r\\n<div>\\r\\n  <label>\\r\\n    Hero name:\\r\\n    <input #userName />\\r\\n  </label>\\r\\n  <!-- (click) passes input value to add() and then clears the input -->\\r\\n  <button (click)=\\\"add(userName.value); userName.value=''\\\">\\r\\n    add\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<a href=\\\"/api/values\\\">GET LINK</a>\\r\\n\\r\\n\\r\\n\\r\\n<!--\\r\\n<p>\\r\\n  Create a new user: <input type=\\\"text\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"UserName\\\">\\r\\n  <button (click)=\\\"PostData(UserName)\\\">Save</button>\\r\\n</p>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div>\\r\\n\\r\\n  Name : <input ng-name=\\\"UserName\\\" /><br /><br />\\r\\n  Password : <input ng-name=\\\"UserPassword\\\" /><br /><br />\\r\\n  <input type=\\\"button\\\" value=\\\"Send\\\" ng-click=\\\"PostData(UserName, UserPassword)\\\" /> <br /><br />\\r\\n\\r\\n</div>\\r\\n\\r\\n      -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Http, RequestOptions, Headers } from '@angular/http'\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { PostDataService } from './post-data.service';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { Username } from './Username';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n\r\n})\r\n\r\n\r\nexport class AppComponent implements OnInit {\r\n \r\n  username: Username[];\r\n  public _url = '/api/values';\r\n\r\n\r\n  constructor(private http: Http, private postDataService: PostDataService) { }\r\n \r\n  apiValues: string[] = [];\r\n\r\n  ngOnInit() {\r\n    this.http.get('/api/values').subscribe(values => {\r\n      this.apiValues = values.json() as string[];\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  add(name: string): void {\r\n    name = name.trim();\r\n    if (!name) { return; }\r\n    this.postDataService.addUser({ name } as Username)\r\n      .subscribe(username => {\r\n        this.username.push(username);\r\n      });\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n//import { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HttpModule } from '@angular/http';\r\nimport { PostDataService } from './post-data.service';\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n\r\n  ],\r\n  providers: [PostDataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { Username } from './Username';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded' })\r\n};\n\n@Injectable()\nexport class PostDataService {\n\r\n  private usernamesUrl = 'api/values';  // URL to web api\r\n  \r\n\n  constructor(private http: HttpClient) { }\n\n  /*\n  getUsername(): Observable<Username[]> {\r\n    // Todo: send the message _after_ fetching the heroes\r\n    return of(Username);\r\n  }\n  */\r\n\r\n\r\n  /** POST: add a new hero to the server */\r\n  addUser(username: Username): Observable<Username> {\r\n    return this.http.post<Username>('/api/values/', username, httpOptions).pipe(\r\n      tap((username: Username) => this.log(`added hero w/ id=${username.id}`)),\r\n      catchError(this.handleError<Username>('addHero'))\r\n    );\r\n  }\n\n\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      this.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\n\n  private log(message: string) {\r\n    \r\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/post-data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}