{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/post-data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<h1>This is my data:</h1>\\r\\n\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let value of apiValues\\\">{{value}}</li>\\r\\n</ul>\\r\\n\\r\\n\\r\\n\\r\\n<h1>Data Input:</h1>\\r\\n\\r\\n<script>\\r\\n  var HttpGetController = function($scope, $http) {\\r\\n    $scope.loading = true;\\r\\n    $http.post('/api/values', { foo: 'bar' }).success(function (response) {\\r\\n      $scope.response = response;\\r\\n      $scope.loading = false;\\r\\n    });\\r\\n  }; \\r\\n</script>\\r\\n\\r\\n\\r\\n<div ng-app=\\\"app\\\" ng-controller=\\\"HttpGetController\\\">\\r\\n  <p>Username: <input type=\\\"text\\\" name=\\\"UserName\\\" ng-model=\\\"UserName\\\" required /></p>\\r\\n  <button ng-click=\\\"HttpGetController()\\\">Submit</button>\\r\\n  <hr />\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!--\\r\\n  <p>\\r\\n    Create a new user: <input type=\\\"text\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"UserName\\\">\\r\\n    <button (click)=\\\"PostData(UserName)\\\">Save</button>\\r\\n  </p>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div>\\r\\n\\r\\n    Name : <input ng-name=\\\"UserName\\\" /><br /><br />\\r\\n    Password : <input ng-name=\\\"UserPassword\\\" /><br /><br />\\r\\n    <input type=\\\"button\\\" value=\\\"Send\\\" ng-click=\\\"PostData(UserName, UserPassword)\\\" /> <br /><br />\\r\\n\\r\\n  </div>\\r\\n\\r\\n        -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\n//import { PostDataService } from './post-data.service';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n  public _url = '/api/values';\r\n\r\n  constructor(private _httpService: Http) { }///, private _postDataService: PostDataService) { }\r\n\r\n  apiValues: string[] = [];\r\n\r\n  ngOnInit() {\r\n    this._httpService.get('/api/values').subscribe(values => {\r\n      this.apiValues = values.json() as string[];\r\n    });\r\n  }\r\n\r\n\r\n  PostData(post: { UserName: string; UserPassword: string}): Observable<any> {\r\n    return this._httpService.post('localhost:54980', post)\r\n      .map(res => res.json())\r\n  }\r\n\r\n\r\n  \r\n  //PROBLEM HERE. WHEN THIS CODE RUNS, ALL GOES TO $#@!\r\n  /*\r\n    createFood(name) {\r\n    let food = {name: name};\r\n    this._postDataService.createFood(food).subscribe(\r\n       data => {\r\n         // refresh the list\r\n         return true;\r\n       },\r\n       error => {\r\n         console.error(\"Error saving data!\");\r\n         return Observable.throw(error);\r\n       }\r\n    );\r\n  }\r\n  \r\n  */\r\n  \r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { PostDataService } from './post-data.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [PostDataService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Rx\";\n\n@Injectable()\nexport class PostDataService {\n \r\n\n  constructor(private http: Http) {}\n\n  // Uses http.get() to load a single JSON file\r\n  getFoods() {\r\n    return this.http.get('/app/food.json').map((res: Response) => res.json());\r\n  }\r\n\r\n\r\n  // Uses Observable.forkJoin() to run multiple concurrent http.get() requests.\r\n  // The entire operation will result in an error state if any single request fails.\n\n  createFood(food) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let body = JSON.stringify(food);\r\n    return this.http.post('/api/values/', body, options).map((res: Response) => res.json());\r\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/post-data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}